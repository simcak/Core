######################### Services #########################
services:
  nginx:
    build:          ./requirements/nginx
    container_name:  nginx
    ports:
      - "443:443"  # HTTPS ("80:80" for HTTP)
    # This means the nginx service will start after the wordpress service starts.
    depends_on:
      - wordpress # why dont we check for healthy? TODO
    volumes:
      - wordpress_data:/var/www/html  # Persist WordPress data
    networks:
      - inception_network
    # Always restart the container if it stops
    restart: always

  wordpress:
    build:          ./requirements/wordpress
    container_name:  wordpress
    environment:
      - WORDPRESS_DB_HOST    =${WORDPRESS_DB_HOST}
      - WORDPRESS_DB_NAME    =${WORDPRESS_DB_NAME}
      - WORDPRESS_DB_USER    =${WORDPRESS_DB_USER}
      - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD}
    depends_on:
      - mariadb:
          condition: service_healthy  # Ensure mariadb is healthy before starting wordpress
    volumes:
      - wordpress_data:/var/www/html
    networks:
      - inception_network
    restart: always

  mariadb:
    build:          ./requirements/mariadb
    container_name:  mariadb
    environment:
      - MYSQL_DATABASE     =${MYSQL_DATABASE}
      - MYSQL_USER         =${MYSQL_USER}
      - MYSQL_PASSWORD     =${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - mariadb_data:/var/lib/mysql  # Persist MariaDB data
    networks:
      - inception_network
    restart: always
    healthcheck:
      test:     ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout:  5s
      retries:  5

######################### Volumes #########################
volumes:
  wordpress_data:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data/wordpress
      o: bind

  mariadb_data:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data/mariadb
      o: bind

######################### Network #########################
networks:
  inception_network:
    driver: bridge